// Lab12.1.cpp
// Михайлов Олександр
// Формування і знищення динамічної мережної структури даних
// Варіант 24


#include <iostream>

using namespace std;

struct Elem {
	Elem* link1,
		* link2;
	int info;
};

int main() {
	Elem* p;

	p = new Elem; // 1) Створили 1-ий елемент та налаштували вказівник р на нього
	p->info = 1; // 2) Присвоїли інф. полю 1-го елемента значення 1
	p->link1 = new Elem; // 3) Створили 4-ий елемент та встановили вказівник 1-го поля 1-го елемента на нього
	p->link2 = new Elem; // 4) Створили 3 елемент та встановили вказівник 2-го поля 1-го елемента на нього
	p->link1->info = 4; // 5) Присвоїли інф. полю 4-го елемента значення 4
	p->link1->link1 = p->link2; // 6) Встановили вказівник 1-го поля 4-го елемента на 3 елемент
	p->link1->link2 = p; // 7) Встановили вказівник 2-го поля 4-го елемента на 1 елемент
	p->link2->info = 3; // 8) Присвоїли інф. полю 3-го елемента значення 3
	p->link2->link1 = new Elem; // 9) Створили 2-ий елемент та встановили вказівник 1-го поля 3-го елемента на нього
	p->link2->link2 = p->link1; // 10) Встановили вказівник 2-го поля 3-го елемента на 4-ий елемент
	p->link2->link1->info = 2; // 11) Присвоїли інф. полю 2-го елемента значення 2
	p->link2->link1->link1 = p; // 12) Встановили вказівник 1-го поля 2-го елемента на 1-ий елемент
	p->link2->link1->link2 = p->link2; // 13) Встановили вказівник 2-го поля 2-го елемента на 3 елемент
	
	delete p->link2->link1; // 14) Видалили 2 елемент
	delete p->link2; // 15) Видалили 3 елемент
	delete p->link1; // 16) Видалили 4 елемент
	delete p; // 17) Видалили 1 елемент

	return 0;
}
